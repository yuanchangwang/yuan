import re

# 1、匹配整数或者小数（包括正数和负数）
print(re.findall('[-+]?\d+(?:\.\d+)?', '123 23.123 -123 -123.12 0 +1 sd9 +123.123'))
# print(re.findall('1.+?2', '1323 23.123 -123 -123.12 0 1 sd9 123123'))  # 非贪婪匹配
# print(re.findall('1.+2', '1323 23.123 -123 -123.12 0 1 sd9 123123'))  # 贪婪匹配

# 2、匹配年月日日期 格式 2018-12-31
print(re.findall('\d{4}-\d{2}-\d{2}', '2018-22-31'))
print(re.findall('\d{4}-(?:0?[1-9]|1[0-2])-(?:[12]\d|3[01]|0?[1-9])', '2018-12-31'))

# 3、匹配qq号 5-12 首字符没有0
print(re.findall('[1-9]\d{4,11}', '23532'))

# 4、11位的电话号码
print(re.findall('1[3-9]\d{9}', '89y13892343242323418235235234234'))

# 5、长度为8-10位的用户密码 ： 包含数字字母下划线
print(re.findall('\w{8,10}', 'ksd_jfk28_342381jkh1j2g41_jhh_53'))

# 6、匹配验证码：4位数字字母组成的
print(re.findall('[\da-zA-Z]{4}', 'skldjfR4  Gk2gHjh  sdd 2Qg 3W4eRGGGjh2kkj25kj23h4n', re.I))
print(re.findall('[\da-z]{4}', 'skldjfR4  Gk2gHjh  sdd 2Qg 3W4eRGGGjh2kkj25kj23h4n', re.I))  # re.I对大小写不敏感

# 7、匹配邮箱地址 邮箱规则
# @之前必须有内容且只能是字母（大小写）、数字、下划线(_)、减号（-）、点（.）
# @和最后一个点（.）之间必须有内容且只能是字母（大小写）、数字、点（.）、减号（-），且两个点不能挨着
# 最后一个点（.）之后必须有内容且内容只能是字母（大小写）、数字且长度为大于等于2个字节，小于等于6个字节
print(re.findall('[\.\w-]+@[\.\w-]*?[\w-]+\.[\da-zA-Z]{2,6}', '28.37.4832--4@q-q-.6-.com'))

# 8、从类似
# <a>wahaha</a>
# <b>banana</b>
# <h1>qqxing</h1>
# <h1>q</h1>
# 这样的字符串中，
# 1）匹配出 wahaha，banana，qqxing 内容。
print(re.findall('<.*?>(.*?)<.*?>', '<a>wahaha</a><b>banana</b><h1>qqxing</h1><h1>q</h1>'))
# 2）匹配出 a,b,h1这样的内容
print(re.findall('<(.*?)>.*?<.*?>', '<a>wahaha</a><b>banana</b><h1>qqxing</h1><h1>q</h1>'))

# 9、1-2*((60-30+(-40/5)*(9-2*5/3+7/3*99/4*2998+10*568/14))-(-4*3)/(16-3*2))
# 从上面算式中匹配出最内层小括号以及小括号内的表达式
res = '1-2*((60-30+(-40/5)*(9-2*5/3+7/3*99/4*2998+10*568/14))-(-4*3)/(16-3*2))'
print(re.findall('\([^()]+\)', res))
