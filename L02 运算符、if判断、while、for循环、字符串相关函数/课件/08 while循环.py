# ### 循环结构: (1) while (2)for
"""
# 优点
(1)减少代码冗余(2)提升效率
# 语法
while 条件表达式:
	循环体
	code1
	code2
"""

# 打印0~100
"""
# (1)初始化变量i
i = 0
# (2)写循环条件
while i<=100:
# (3)自增自减得值
	i+=1
"""
i= 0
while i <= 100:
	# 写逻辑在此处 ... 
	print(i)
	
	i+=1

"""
# 第一套循环
21.首先i=0
22.判断0<=100 条件成立 返回True 执行循环体
24.打印当前i
26.i+=1 i = i+1 i=>1

# 第二套循环
回到22行循环判断条件中
22. 1 <= 100  条件成立 返回True 执行循环体
24 打印当前i
26.i+=1 i = i+1 i=>2

# 第三套循环
# 第四套循环
# ...
# ...

# 直到当i = 101 时 ,回循环判断条件中,发现不成立,返回False
循环体终止不执行了.跳出循环
"""

# 计算1~100的累加和?
i = 1
total = 0
while i<=100:
	# 把i都加在一起就是累加和
	# total = total + i
	total += i	
	i+=1	
print(total)
'''
# 第一次循环
53 判断 i 1<=100 条件成立 执行循环体当中的内容
56.total = total + i =>  total = 0 + 1
57.i+=1  i=>2

# 第二次循环
53 判断 i 2<=100 条件成立 执行循环体当中的内容
56.total = total + i =>  total = 0 + 1 + 2
57.i+=1  i=>3

# 第三次循环
53 判断 i 3<=100 条件成立 执行循环体当中的内容
56.total = total + i =>  total = 0 + 1 + 2 + 3
57.i+=1  i=>4

依次类推...
当i = 101 的时候 发现101 <= 100 返回False 循环体不执行,终止循环
total = total + i => total = 0+1+2+3+ ..... + 100
'''

sign = True
total = 0
i = 1
while sign: # while True
	total += i
	i+=1
	# 如果i = 101 意味着不在循环了，停止下来
	if i == 101:
		# 修改sign为假，循环终止
		sign = False

print(total)





































